# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pubsub_pb2 as pubsub__pb2


class PubSubServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBytesData = channel.stream_stream(
                '/data.PubSubService/GetBytesData',
                request_serializer=pubsub__pb2.RequestTopicData.SerializeToString,
                response_deserializer=pubsub__pb2.BytesData.FromString,
                )
        self.GetIntData = channel.stream_stream(
                '/data.PubSubService/GetIntData',
                request_serializer=pubsub__pb2.RequestTopicData.SerializeToString,
                response_deserializer=pubsub__pb2.IntData.FromString,
                )
        self.GetFloatData = channel.stream_stream(
                '/data.PubSubService/GetFloatData',
                request_serializer=pubsub__pb2.RequestTopicData.SerializeToString,
                response_deserializer=pubsub__pb2.FloatData.FromString,
                )
        self.GetStringData = channel.stream_stream(
                '/data.PubSubService/GetStringData',
                request_serializer=pubsub__pb2.RequestTopicData.SerializeToString,
                response_deserializer=pubsub__pb2.StringData.FromString,
                )
        self.GetBoolData = channel.stream_stream(
                '/data.PubSubService/GetBoolData',
                request_serializer=pubsub__pb2.RequestTopicData.SerializeToString,
                response_deserializer=pubsub__pb2.BoolData.FromString,
                )
        self.PostBytesData = channel.stream_stream(
                '/data.PubSubService/PostBytesData',
                request_serializer=pubsub__pb2.BytesData.SerializeToString,
                response_deserializer=pubsub__pb2.ReplyPostData.FromString,
                )
        self.PostIntData = channel.stream_stream(
                '/data.PubSubService/PostIntData',
                request_serializer=pubsub__pb2.IntData.SerializeToString,
                response_deserializer=pubsub__pb2.ReplyPostData.FromString,
                )
        self.PostFloatData = channel.stream_stream(
                '/data.PubSubService/PostFloatData',
                request_serializer=pubsub__pb2.FloatData.SerializeToString,
                response_deserializer=pubsub__pb2.ReplyPostData.FromString,
                )
        self.PostStringData = channel.stream_stream(
                '/data.PubSubService/PostStringData',
                request_serializer=pubsub__pb2.StringData.SerializeToString,
                response_deserializer=pubsub__pb2.ReplyPostData.FromString,
                )
        self.PostBoolData = channel.stream_stream(
                '/data.PubSubService/PostBoolData',
                request_serializer=pubsub__pb2.BoolData.SerializeToString,
                response_deserializer=pubsub__pb2.ReplyPostData.FromString,
                )


class PubSubServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBytesData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIntData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFloatData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStringData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBoolData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostBytesData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostIntData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostFloatData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostStringData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostBoolData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PubSubServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBytesData': grpc.stream_stream_rpc_method_handler(
                    servicer.GetBytesData,
                    request_deserializer=pubsub__pb2.RequestTopicData.FromString,
                    response_serializer=pubsub__pb2.BytesData.SerializeToString,
            ),
            'GetIntData': grpc.stream_stream_rpc_method_handler(
                    servicer.GetIntData,
                    request_deserializer=pubsub__pb2.RequestTopicData.FromString,
                    response_serializer=pubsub__pb2.IntData.SerializeToString,
            ),
            'GetFloatData': grpc.stream_stream_rpc_method_handler(
                    servicer.GetFloatData,
                    request_deserializer=pubsub__pb2.RequestTopicData.FromString,
                    response_serializer=pubsub__pb2.FloatData.SerializeToString,
            ),
            'GetStringData': grpc.stream_stream_rpc_method_handler(
                    servicer.GetStringData,
                    request_deserializer=pubsub__pb2.RequestTopicData.FromString,
                    response_serializer=pubsub__pb2.StringData.SerializeToString,
            ),
            'GetBoolData': grpc.stream_stream_rpc_method_handler(
                    servicer.GetBoolData,
                    request_deserializer=pubsub__pb2.RequestTopicData.FromString,
                    response_serializer=pubsub__pb2.BoolData.SerializeToString,
            ),
            'PostBytesData': grpc.stream_stream_rpc_method_handler(
                    servicer.PostBytesData,
                    request_deserializer=pubsub__pb2.BytesData.FromString,
                    response_serializer=pubsub__pb2.ReplyPostData.SerializeToString,
            ),
            'PostIntData': grpc.stream_stream_rpc_method_handler(
                    servicer.PostIntData,
                    request_deserializer=pubsub__pb2.IntData.FromString,
                    response_serializer=pubsub__pb2.ReplyPostData.SerializeToString,
            ),
            'PostFloatData': grpc.stream_stream_rpc_method_handler(
                    servicer.PostFloatData,
                    request_deserializer=pubsub__pb2.FloatData.FromString,
                    response_serializer=pubsub__pb2.ReplyPostData.SerializeToString,
            ),
            'PostStringData': grpc.stream_stream_rpc_method_handler(
                    servicer.PostStringData,
                    request_deserializer=pubsub__pb2.StringData.FromString,
                    response_serializer=pubsub__pb2.ReplyPostData.SerializeToString,
            ),
            'PostBoolData': grpc.stream_stream_rpc_method_handler(
                    servicer.PostBoolData,
                    request_deserializer=pubsub__pb2.BoolData.FromString,
                    response_serializer=pubsub__pb2.ReplyPostData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'data.PubSubService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PubSubService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBytesData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/GetBytesData',
            pubsub__pb2.RequestTopicData.SerializeToString,
            pubsub__pb2.BytesData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIntData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/GetIntData',
            pubsub__pb2.RequestTopicData.SerializeToString,
            pubsub__pb2.IntData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFloatData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/GetFloatData',
            pubsub__pb2.RequestTopicData.SerializeToString,
            pubsub__pb2.FloatData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStringData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/GetStringData',
            pubsub__pb2.RequestTopicData.SerializeToString,
            pubsub__pb2.StringData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBoolData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/GetBoolData',
            pubsub__pb2.RequestTopicData.SerializeToString,
            pubsub__pb2.BoolData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostBytesData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/PostBytesData',
            pubsub__pb2.BytesData.SerializeToString,
            pubsub__pb2.ReplyPostData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostIntData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/PostIntData',
            pubsub__pb2.IntData.SerializeToString,
            pubsub__pb2.ReplyPostData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostFloatData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/PostFloatData',
            pubsub__pb2.FloatData.SerializeToString,
            pubsub__pb2.ReplyPostData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostStringData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/PostStringData',
            pubsub__pb2.StringData.SerializeToString,
            pubsub__pb2.ReplyPostData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostBoolData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/data.PubSubService/PostBoolData',
            pubsub__pb2.BoolData.SerializeToString,
            pubsub__pb2.ReplyPostData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
